MVP:
---

BUG: pisanje resenja: validacija da zahteva ime kolone (neophodno je da bi se lakse radilo poredjenje rezultata)
BUG: create template model - kada se kreira prva tabela ona se pojavi u dropdown-u ali ne moze da se selektuje (ili je vec selektovana) da se vidi njena struktura.
     verovatno je slicno kada se pise resenje za bazu koja ima samo jednu tabelu

UX improvement: brisanje (umesto dugmeta selektabilni red i delete na tastaturi), dodavanje (enter dok je neko od polja iz poslednjeg reda tj. iz reda za insert u fokusu)

razmisli o 2 vrste resulta kao response na front:
 - data result (kada se radi neki get podataka IsSuccess, Data, Errors)
 - operation result kada se radi neki update ili insert (IsSuccess, Errors) - data treba da se update-uje novim get-om

review CloneDatabase sa failIf exist true (tu je verovatno problem sto nije reentrant - ako clone uspe a db save failuje zaglavljeni smo i ne mozemo da probamo opet)		

API/StudentController/AssignStudents: _microsoftSQLService.CloneDatabases(test.Task.NameOnServer !!!! - zar ne bi trebalo test.task.TEMPLATE.NameOnServer)
sta ako neki assgnmenti ne uspeju
	- ako failuje clone


mozda ne klonirati na assign - klonirace se i za studente koji ne dodju
klonirati kada student pocne - veliki load ako 30 studenata pocne u isto vreme

cleanup viska baza nakon ocenjivanja (ili kada prodje uvid)!

Handle syntax errors in sql editor (in response)
Delete: Templates, Tasks, Synthesis Tests

Nice to have:
------------
FE (create Template/Task/Test + set Template/Task description): FE validations (name/description not empty or taken + Template/Task selected when creating Task/Test)
Data celija (templates i tasks tabele): 5 records in 3 tables
Model celija (templates tablela): 4 columns in 2 tables
ekran Kreiranje resenja(Tasks -> solution): mozda staviti rezultat upita i struktura baze u 2 taba
wait screen kada se modifikuje data neke tabele (Data.cshtml)(ne iscrtavati ponovo table header)

===================================================================================================================================================
***************************************************************************************************************************************************
===================================================================================================================================================
-??? load profesorovog resenja nakon sto je sacuvano

Logical validations
====================
- profesorovo resenje za sintezu (sql) ne trebalo da se menja nakon sto pocne bar jedan test (zbog imena kolona tj. formata resenja)

LOGOVANJE: File sistem, sql server, baza - odvojeni sistemi koji nisu transakcija
=================================================================================
- uvek treba znati sta se desilo (sev 1)
- kriticni scenariji (radi se update template-a na tasku, obrise se postojeci template, novi ne uspe da se klonira - npr neko je sa servera obrisao bazu novog templejta i nema odakle da se klonira) koji uzrokuju greske u sistemu treba da budu neki alert (nije dovoljno samo da se uloguju) ili makar da se izdvoje kao kriticne greske
- pitanje da li se sve moze ulogovati (create ili update template, baza se klonira, ne uspe upis u bazu - task ostaje vezan za stari template)

Create template
=======================
_microsoftSQLService.CreateDatabase treba da uloguje poruku od sql servera ukoliko ne moze da kreira bazu na serveru

Define template model
=====================
- izvrsavanje skripta nad postojecom bazom
- prikaz trenutnog modela https://www.google.com/search?q=jquery+json+viewer&rlz=1C1GCEA_enRS826RS826&oq=jquery+json+vire&aqs=chrome.1.69i57j0l5.7072j0j7&sourceid=chrome&ie=UTF-8
- sql sintaska
- go (split u vise skripti) https://stackoverflow.com/questions/40814/execute-a-large-sql-script-with-go-commands


Create database
===========================================================================
- TEXTAREA: sql syntax, horizontal scroll, undo, responsive
- transformacija inputa u pravilan sql (izbaci whitespace-ove)
- Verifikacija upita
- modali

Modify database data
===========================================================================
- UX: kada se radi insert edit delete da kratko zasvetli novi red, editovana celija ili red koji se brise (ili samo wait screen preko cele tabele)
- type converter (poseban fajl)
- where statement po primarnom kljucu https://stackoverflow.com/questions/3930338/sql-server-get-table-primary-key-using-sql-query
- bootstrap css - dropdown ne radi lepo (kada se spusti nema desne ivice) - kada se odzumira radi
- treba search za dropdown
- json optimizacija (jedan niz kolone i ostalo data - a ne "kolona":"data")
- vertikalni scroll za tabelu
- esacapovani - kada se posalju treba da budu originalni (unescapeoveani) + da li se kao edit racuna kada se promeni unescape u esacape
- where statement treba da proveri count 1

INSERT NE IDE NA NEKE KOLONE (autogenerated): za tabelu ('AWBuildVersion') moze preko ovog upita
SELECT name FROM sys.identity_columns WHERE object_id = OBJECT_ID('AWBuildVersion') (isto i za rowversion i timestamp tipove)

Tasks & Templates
=================
- na taskuovima, kada se radi update template-a (FE pozovi API samo ako izabraniTemplate != stariTemplate)
- created by, created date
- uradi delete (mdf i ldf bi trebali da se obrisu (sa bazom). Brisu se kada se baza obrise iz sql servera (proveri da li se brisu i kada se obrise baza preko aplikacije))
-izvuci zajednicko u htmlu u partial-e (modali za update name, updaate description, delete)
-izvuci zajednicko u js-u u helper metode

Tasks
===========
- izvuci iz diplomskog i implementiraj kloniranje baze !!! + kod update template-a isto i dodatno brisanje postojece baze
- gde god ima ovako brisanje baze treba da se nakon toga proveri da li baza postoji. Ako postoji (neuspesno brisanje) to treba da se uloguje negde !
- Create template: dto validation (Name not empty), db validations (ne postoji vec sa istim imenom u bazi), responseDTO (umesto entity)
- Update description: dto validation (Description not empty), responseDTO (umesto entity)
- Update description: dto validation (Name not empty), db validations (ne postoji vec sa istim imenom), responseDTO (umesto entity)
- Set SqlScript: dto validation (SqlScript: not empty), implement GetCreatingDatabases, 	
- FE validacije na modalima
- Format resenja (lista imena kolona)
- Tacan upit (prof. resenje) - pre nego sto se upit submituje provera (format izlaza i format resenja, bar jedan red u resenju)

Templates
===========
- FE validacije na modalima
- change template, on show, scroll to item with class active


Code refactoring
=================
- postavi AsNoTracking da bude default
- izvuci sql tipove u neki enum (na vise mesta hardkodovani stringovi tipova tipa "nvarchar")
- Sql Expression builder (ovaj kod se ponavlja):
	var columnValuesWhere = recordPrevious.Select(x => $"[{x.ColumnName}] = '{x.Value}'");
	var whereExpr = string.Join(" and ", columnValuesWhere);
GetAdminConnParams - vidi gde se sve koristi, preispitaj
- //AutoMapper (add AutoMapper)
- FE profesor: (template, tasks, synthesis test i vrv analysis) - svi imaju update name modal (centralizuj kod)